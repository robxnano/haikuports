From b71a8b88ddd20f6c0dd40b9bf02c832e2bd284a9 Mon Sep 17 00:00:00 2001
From: robxnano <89391914+robxnano@users.noreply.github.com>
Date: Fri, 13 Jan 2023 17:53:19 +0000
Subject: [PATCH] Haiku: Add haiku.defs

---
 make/variant/haiku.defs | 14 ++++++++++++++
 1 file changed, 14 insertions(+)
 create mode 100644 make/variant/haiku.defs

diff --git a/make/variant/haiku.defs b/make/variant/haiku.defs
new file mode 100644
index 000000000..69507df61
--- /dev/null
+++ b/make/variant/haiku.defs
@@ -0,0 +1,14 @@
+TARGET.dylib.ext = .so
+
+GCC.start      = 1
+GCC.end        = 1
+GCC.args.dylib = -shared
+GCC.args.extra.exe++ = -lnetwork -liconv
+GCC.args.pic   = 1
+
+GCC.args.g.none = -g0
+GCC.args.g.min  = -g1
+GCC.args.g.std  = -g2
+GCC.args.g.max  = -g3
+CFLAGS += -fPIC
+LDFLAGS += -fPIC
--
2.39.0


From 95bf0358d5c1a16eca0fa765a2ccad9ad5b5f152 Mon Sep 17 00:00:00 2001
From: robxnano <89391914+robxnano@users.noreply.github.com>
Date: Fri, 13 Jan 2023 18:29:21 +0000
Subject: [PATCH] Haiku: Disable asm for ffmpeg

---
 contrib/ffmpeg/module.defs | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/contrib/ffmpeg/module.defs b/contrib/ffmpeg/module.defs
index 7991040ff..7bfbde11f 100644
--- a/contrib/ffmpeg/module.defs
+++ b/contrib/ffmpeg/module.defs
@@ -28,6 +28,8 @@ ifneq (,$(filter $(HOST.system),freebsd netbsd openbsd))
 endif

 FFMPEG.CONFIGURE.extra = \
+    --disable-asm \
+    --disable-inline-asm \
     --enable-gpl \
     --disable-doc \
     --disable-programs \
--
2.39.0


From dc9b3fc63f524324aa29bb4f4678c590df419dcd Mon Sep 17 00:00:00 2001
From: robxnano <89391914+robxnano@users.noreply.github.com>
Date: Fri, 13 Jan 2023 18:28:13 +0000
Subject: [PATCH] Haiku: Add bswap support for libdvdread

---
 contrib/libdvdread/P02-haiku-bswap-h.patch | 17 +++++++++++++++++
 1 file changed, 17 insertions(+)
 create mode 100644 contrib/libdvdread/P02-haiku-bswap-h.patch

diff --git a/contrib/libdvdread/P02-haiku-bswap-h.patch b/contrib/libdvdread/P02-haiku-bswap-h.patch
new file mode 100644
index 000000000..e1b23eee5
--- /dev/null
+++ b/contrib/libdvdread/P02-haiku-bswap-h.patch
@@ -0,0 +1,17 @@
+diff --git a/src/bswap.h b/src/bswap.h
+index d3b2383..ecab57f 100644
+--- a/src/bswap.h
++++ b/src/bswap.h
+@@ -104,6 +104,12 @@
+       (((x) & 0x000000000000ff00ULL) << 40) | \
+       (((x) & 0x00000000000000ffULL) << 56))
+
++#elif defined(__HAIKU__)
++#include <os/support/ByteOrder.h>
++#define B2N_16(x) B_BENDIAN_TO_HOST_INT16(x)
++#define B2N_32(x) B_BENDIAN_TO_HOST_INT32(x)
++#define B2N_64(x) B_BENDIAN_TO_HOST_INT64(x)
++
+ #else
+
+ /* If there isn't a header provided with your system with this functionality
-- 
2.39.0


From 87676f45ff639ea16da71b2aa1dc7e98aeb62031 Mon Sep 17 00:00:00 2001
From: robxnano <89391914+robxnano@users.noreply.github.com>
Date: Fri, 13 Jan 2023 23:42:49 +0000
Subject: [PATCH] Haiku: Add jni support for libbluray

---
 contrib/libbluray/P03-haiku-configure.patch | 13 +++++++++++++
 1 file changed, 13 insertions(+)
 create mode 100644 contrib/libbluray/P03-haiku-configure.patch

diff --git a/contrib/libbluray/P03-haiku-configure.patch b/contrib/libbluray/P03-haiku-configure.patch
new file mode 100644
index 000000000..4542dfff5
--- /dev/null
+++ b/contrib/libbluray/P03-haiku-configure.patch
@@ -0,0 +1,13 @@
+--- libbluray-1.0.2/configure.orig	2017-12-04 00:27:38.000000000 +0900
++++ libbluray-1.0.2/configure	2018-04-09 20:47:19.504645000 +0900
+@@ -14,6 +14,10 @@
+ ## M4sh Initialization. ##
+ ## -------------------- ##
+
++if test `uname` = 'Haiku' ; then
++  ln -s linux jni/haiku
++fi
++
+ # Be more Bourne compatible
+ DUALCASE=1; export DUALCASE # for MKS sh
+ if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then :
--
2.39.0


From b5804158bd3fca1e4e3d2bbde8b32fc883939a44 Mon Sep 17 00:00:00 2001
From: robxnano <89391914+robxnano@users.noreply.github.com>
Date: Fri, 13 Jan 2023 19:32:28 +0000
Subject: [PATCH] Haiku: Enable GTK GUI support

---
 gtk/configure.ac       | 3 +++
 make/include/main.defs | 4 ++--
 2 files changed, 5 insertions(+), 2 deletions(-)

diff --git a/gtk/configure.ac b/gtk/configure.ac
index 23c526f9c..f1cc474ca 100644
--- a/gtk/configure.ac
+++ b/gtk/configure.ac
@@ -240,6 +240,9 @@ case $host in
 			HB_LIBS="$HB_LIBS -lmfplat -lstrmiids"
 		fi
 		;;
+	*-*-haiku*)
+		HB_LIBS="$HB_LIBS -lpthread -liconv -lnetwork"
+		;;
 	*-*-freebsd*)
 		HB_LIBS="$HB_LIBS -lpthread"
 		if test "x$use_qsv" = "xyes" ; then
diff --git a/make/include/main.defs b/make/include/main.defs
index a53bd34e5..7ac983438 100644
--- a/make/include/main.defs
+++ b/make/include/main.defs
@@ -135,8 +135,8 @@ ifeq (1-gnu,$(FEATURE.gtk)-$(HOST.system))
     MODULES += gtk
 endif

-ifeq (1-netbsd,$(FEATURE.gtk)-$(BUILD.system))
-    ## build gtk when gtk+netbsd
+ifeq (1-haiku,$(FEATURE.gtk)-$(BUILD.system))
+    ## build gtk when gtk+haiku
     MODULES += gtk
 endif

--
2.39.0


From 9c6b0b88efed96b7ba5dab5c364e9d75e596576b Mon Sep 17 00:00:00 2001
From: robxnano <89391914+robxnano@users.noreply.github.com>
Date: Sat, 14 Jan 2023 03:24:41 +0000
Subject: [PATCH] Add support for specifying data dir

---
 gtk/module.rules  |  3 ++-
 make/configure.py | 10 ++++++++++
 2 files changed, 12 insertions(+), 1 deletion(-)

diff --git a/gtk/module.rules b/gtk/module.rules
index 7d372af64..3676ec76c 100644
--- a/gtk/module.rules
+++ b/gtk/module.rules
@@ -22,7 +22,8 @@ $(GTK.CONFIGURE.stamp): $(GTK.src/)configure.ac $(GTK.src/)src/Makefile.am
 		CFLAGS="$(call fn.ARGS,GTK.GCC,.g .O *D *W ?extra)" \
 		LDFLAGS="$(call fn.ARGS,GTK.GCC,?strip .g .O ?extra.exe)" \
 		PYTHON="$(PYTHON.exe)" \
-		--prefix=$(PREFIX) \
+		--prefix="$(PREFIX)" \
+		--datarootdir="$(DATADIR)" \
 		--with-hb=$(call fn.ABSOLUTE,$(BUILD/))
 	$(TOUCH.exe) $@

diff --git a/make/configure.py b/make/configure.py
index b02a3afe9..cf02c147d 100644
--- a/make/configure.py
+++ b/make/configure.py
@@ -95,12 +95,14 @@ class Configure( object ):
         self.build_final  = os.curdir
         self.src_final    = self._final_dir( self.build_dir, self.src_dir )
         self.prefix_final = self._final_dir( self.build_dir, self.prefix_dir )
+        self.data_final   = self._final_dir( self.build_dir, self.data_dir )
         if build_tuple.match( '*-*-darwin*' ):
             self.xcode_prefix_final = self._final_dir( self.build_dir, self.xcode_prefix_dir )

         self.infof( 'compute: makevar SRC/    = %s\n', self.src_final )
         self.infof( 'compute: makevar BUILD/  = %s\n', self.build_final )
         self.infof( 'compute: makevar PREFIX/ = %s\n', self.prefix_final )
+        self.infof( 'compute: makevar DATADIR/= %s\n', self.data_final )
         if build_tuple.match( '*-*-darwin*' ):
             self.infof( 'compute: makevar XCODE.prefix/ = %s\n', self.xcode_prefix_final )

@@ -194,6 +196,9 @@ class Configure( object ):
         self.src_dir    = os.path.normpath( options.src )
         self.build_dir  = os.path.normpath( options.build )
         self.prefix_dir = os.path.normpath( options.prefix )
+        if options.datadir is None:
+            options.datadir = os.path.normpath( self.prefix_dir + '/share' )
+        self.data_dir   = os.path.normpath( options.datadir )
         if build_tuple.match( '*-*-darwin*' ) and options.cross is None:
             self.xcode_prefix_dir = os.path.normpath( options.xcode_prefix )
         if options.sysroot != None:
@@ -1359,6 +1364,8 @@ def createCLI( cross = None ):
         help='specify build scratch/output dir [%s]' % (cfg.build_dir) )
     grp.add_argument( '--prefix', default=cfg.prefix_dir, action='store', metavar='DIR',
         help='specify install dir for products [%s]' % (cfg.prefix_dir) )
+    grp.add_argument( '--datadir', default=None, action='store', metavar='DIR',
+        help='specify data dir for products [%s]' % (cfg.data_dir) )
     cli.add_argument_group( grp )

     ## add build options
@@ -1591,6 +1598,7 @@ try:
     build_tuple = BuildTupleProbe(); build_tuple.run()

     cfg.prefix_dir = '/usr/local'
+    cfg.data_dir   = 'PREFIX/share'
     if build_tuple.match( '*-*-darwin*' ):
         cfg.xcode_prefix_dir = '/Applications'

@@ -2048,6 +2056,8 @@ int main()
     doc.add( 'BUILD/',  cfg.build_final + os.sep )
     doc.add( 'PREFIX',  cfg.prefix_final )
     doc.add( 'PREFIX/', cfg.prefix_final + os.sep )
+    doc.add( 'DATADIR', cfg.data_final )
+    doc.add( 'DATADIR/', cfg.data_final + os.sep )

     doc.addBlank()
     doc.add( 'SECURITY.sandbox',    int( options.enable_sandbox ))
-- 
2.39.0


From 2c468b130e599eaf0280a57c172ad0432c942bd9 Mon Sep 17 00:00:00 2001
From: robxnano <89391914+robxnano@users.noreply.github.com>
Date: Sat, 14 Jan 2023 18:30:22 +0000
Subject: [PATCH] Haiku: Disable x265 assembly

---
 contrib/x265_10bit/module.defs | 4 ++++
 contrib/x265_12bit/module.defs | 4 ++++
 contrib/x265_8bit/module.defs  | 4 ++++
 3 files changed, 12 insertions(+)

diff --git a/contrib/x265_10bit/module.defs b/contrib/x265_10bit/module.defs
index 16a75b330..4af71b529 100644
--- a/contrib/x265_10bit/module.defs
+++ b/contrib/x265_10bit/module.defs
@@ -24,6 +24,10 @@ ifeq (size-aggressive,$(GCC.O))
     X265_10.CONFIGURE.extra += -DCMAKE_CXX_FLAGS_MINSIZEREL="-Oz -DNDEBUG" -DCMAKE_C_FLAGS_MINSIZEREL="-Oz -DNDEBUG"
 endif

+ifeq (haiku,$(HOST.system))
+	X265_10.CONFIGURE.extra += -DENABLE_ASSEMBLY=0
+endif
+
 ifeq (darwin,$(HOST.system))
     X265_10.CONFIGURE.extra += -DCMAKE_OSX_ARCHITECTURES=$(HOST.machine)
 endif
diff --git a/contrib/x265_12bit/module.defs b/contrib/x265_12bit/module.defs
index 070a767b7..a1e996130 100644
--- a/contrib/x265_12bit/module.defs
+++ b/contrib/x265_12bit/module.defs
@@ -24,6 +24,10 @@ ifeq (size-aggressive,$(GCC.O))
     X265_12.CONFIGURE.extra += -DCMAKE_CXX_FLAGS_MINSIZEREL="-Oz -DNDEBUG" -DCMAKE_C_FLAGS_MINSIZEREL="-Oz -DNDEBUG"
 endif

+ifeq (haiku,$(HOST.system))
+	X265_12.CONFIGURE.extra += -DENABLE_ASSEMBLY=0
+endif
+
 ifeq (darwin,$(HOST.system))
     X265_12.CONFIGURE.extra += -DCMAKE_OSX_ARCHITECTURES=$(HOST.machine)
 endif
diff --git a/contrib/x265_8bit/module.defs b/contrib/x265_8bit/module.defs
index eeaf86969..2d93243fc 100644
--- a/contrib/x265_8bit/module.defs
+++ b/contrib/x265_8bit/module.defs
@@ -21,6 +21,10 @@ ifeq (size-aggressive,$(GCC.O))
     X265_8.CONFIGURE.extra += -DCMAKE_CXX_FLAGS_MINSIZEREL="-Oz -DNDEBUG" -DCMAKE_C_FLAGS_MINSIZEREL="-Oz -DNDEBUG"
 endif

+ifeq (haiku,$(HOST.system))
+	X265_8.CONFIGURE.extra += -DENABLE_ASSEMBLY=0
+endif
+
 ifeq (darwin,$(HOST.system))
     X265_8.CONFIGURE.extra += -DCMAKE_OSX_ARCHITECTURES=$(HOST.machine)
 endif
--
2.39.0


